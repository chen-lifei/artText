http://jenkins.500ding.me/jenkins/
五百丁jenkins：http://192.168.3.202:8080/jenkins/
chenlifei
clf123456
吾道jenkins：http://192.168.3.203:8080/jenkins/
chenlifei
clf12345678

迦剪管理中心：
chenlifei/clf12345678

吾道管理中心：
wanglifei/wlf12345678

撤销git add操作：git reset HEAD filename

获取图片的原始宽高：
let img = new Image();
img.src = 'https://www.....';
img.onload = function() { console.log(img.naturalWidth, img.naturalHeight) };

jquery对象转dom:
1. 使用jquery提供的get方法来访问jquery对象中相关的dom节点  $('.div').get(0)

获取元素和页面顶部之间的距离：$('.ele').offset().top

正则匹配中文：/^[\u4e00-\u9fa50-9]+$/g
正则匹配英文：/^[a-zA-Z0-9]+$/g
正则提取链接：/(http:\/\/|https:\/\/)((\w|=|\?|\.|\/|\&|-)+)/g
正则提取数字部分：/[^0-9.]/ig    =>    str.replace(/[^0-9.]/ig, '');

// 阻止离开页面弹框出现
$(window).unbind('beforeunload');
window.onbeforeunload = null;

jQuery的:visible选择器：$(.box :visible) => 选择全部可见的 .box 元素；$(.box:visible) => 选择可见的 .box 元素。

获取光标所在区域的元素信息：
①
let elementContent = window.getSelection();
if (elementContent .anchorNode) {
            elementContent= elementContent.getRangeAt(0).endContainer.parentElement;
}
②
let elementContent = window.getSelection().anchorNode;
if (elementContent && elementContent.nodeName === '#text') {
            elementContent = elementContent.parentNode;
}

克隆节点：node.cloneNode(deep)
deep为true: 克隆节点及其属性，以及后代；deep为false: 克隆节点和后代

vue数据绑定image的src时，需要使用require: <img :src="require(`@/assets/images/indexView/${thirdPageSelect.value}.png`)" alt=""> 或者在定义数组时，list: { ..., url: require('@/assets/images/indexView/template.png') }... <img :src="list.url">

@/：webpack/build/webpack.base.conf.js中配置的路径别名
~@/：~ 代表根目录，~@即根目录下的配置为@的路径

设置背景模糊，字体不会被影响：backdrop-filter: blur(10px); -webkit-backdrop-filter: blur(10px);

vue的transition标签使用先渐隐后渐显的动画：
.fade-enter-active, .fade-leave-active {
    transition: all 2s;
}
.fade-enter {
    opacity: 0;
}
.fade-enter-to {
    opacity: 1;
}
.fade-leave-active {
    display: none;
}


文档观察者
vue的观察 observer??

NavHead.vue
line152:
.message-contain,
    .member-contain {
        position: relative;
        display: inline-block;
        margin-left: 10px;
    }
    .member-contain img{
        width: 34px;
        height: 34px;
        cursor: pointer;
        vertical-align: middle;
        border-radius: 50%;
        border: 2px solid #e3e6ec;
        image-rendering: -webkit-optimize-contrast;
    }


接入字节图标
1、封面图生成：重新封装一个json,包含封面图，封面图通过字节提供的svg，转成base64
2、插入画布使用：首先调用字节提供的api，传入颜色、大小等配置，获取到字节返回的内容，然后转成svg，再把svg换成吾道可以使用的html结构（复制粘贴svg，拾色器）

addBytedanceIcon({
                icon: bytedanceIcon[317],
                size: '800',
                color: '#0B7BF6',
                build(svg) {
                    try {
                        let shape_opt = opt_factory.init_opt('shape'),
                            option = opt_factory.init_opt('group'),
                            svg_obj = shape_opt.format_paste_shape(svg).element_list;

                        svg_obj.forEach(item => {
                            item = that.ele_build_before_format(item);
                            item.iconSize = 80;
                        });
                        let svg_format = option.ele_paste(that, { list: svg_obj });

                        if (svg_format.list.length === 1) {
                            let $ele = $('.page_contain').find('#' + svg_format.list[0].id);
                            // 设置居中
                            option.fit_dom_offset($ele);
                            // 选中元素
                            that.set_ele_checked($ele);
                        } else if (svg_format.list.length > 1) {
                            svg_format.list.forEach(item => {
                                let $ele = $('.page_contain').find('#' + item.id);
                                $ele.addClass('checked');
                            });
                            let $checked = $('.page_contain .ele_item.checked');
                            // 设置居中
                            option.fit_dom_offset($checked);
                            // 选中元素
                            that.set_ele_checked($checked);
                        }
                    } catch (e) {
                        console.log(e);
                    }
                }
            });


shape_opt: line568
if (ele.iconSize) {
			ele.viewBox = `0 0 ${ele.iconSize} ${ele.iconSize}`;
		}

line620:
				if (!fill) fill = 'none';
